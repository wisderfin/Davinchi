from telebot.async_telebot import AsyncTeleBot
import telebot

from app.keyboard import status_keyboard, menu_keyboard, edit_profile_keyboard
from app import redis_utils
from app.utils import get_user


def me_handlers(bot: AsyncTeleBot):
    @bot.message_handler(func=lambda mes: mes.text == "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
    async def callback_query(mes):
        user = await get_user(mes.from_user.id)
        try:
            status = redis_utils.get(f'{user.id}')
            status = status if status is not None else 'mute'
        except Exception as _ex:
            status = 'mute'
        await bot.send_photo(mes.from_user.id, user.photos, f'–°—Ç–∞—Ç—É—Å: {status}\n'
                                                            f'–ò–º—è: {user.name}\n'
                                                            f'–í–æ–∑—Ä–∞—Å—Ç: {user.age}\n'
                                                            f'–ü–æ–ª: {'–ú' if user.gender else '–ñ'}\n'
                                                            f'–õ–æ–∫–∞—Ü–∏—è: {user.location}\n'
                                                            f'–û —Å–µ–±–µ: {user.description}',
                             reply_markup=edit_profile_keyboard())
        redis_utils.set(key=f'{user.id}', value=status)

    @bot.message_handler(func=lambda mes: mes.text == 'üìù –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å')
    async def set_status(mes):
        await bot.send_message(mes.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å', reply_markup=status_keyboard())

    @bot.message_handler(func=lambda mes: mes.text == 'üéÆ –¢–∏–º–º–µ–π—Ç')
    async def set_status_teammeate(mes):
        redis_utils.set('key', 'value')
        await bot.send_message(mes.from_user.id, f"–í–∞—à —Å—Ç–∞—Ç—É—Å: –ü–æ–∏—Å–∫ —Ç–∏–º–µ–π—Ç–æ–≤",
                               reply_markup=menu_keyboard())
        redis_utils.set(key=f'{mes.from_user.id}', value='teammate')

    @bot.message_handler(func=lambda mes: mes.text == 'üó® –°–æ–±–µ—Å–µ–¥–Ω–∏–∫')
    async def set_status_talcking(mes):
        await bot.send_message(mes.from_user.id, f"–í–∞—à —Å—Ç–∞—Ç—É—Å: –ü–æ–∏—Å–∫ –æ–±—â–µ–Ω–∏—è",
                               reply_markup=menu_keyboard())
        redis_utils.set(key=f'{mes.from_user.id}', value='talcking')

    @bot.message_handler(func=lambda mes: mes.text == "üö´ –ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å")
    async def set_status_mute(mes):
        await bot.send_message(mes.from_user.id, f"–í–∞—à —Å—Ç–∞—Ç—É—Å: –ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å",
                               reply_markup=menu_keyboard())
        redis_utils.set(key=f'{mes.from_user.id}', value='mute')

    @bot.message_handler(func=lambda mes: mes.text == 'üîô –ù–∞–∑–∞–¥')
    async def callback_query(mes):
        user = await get_user(mes.from_user.id)
        status = redis_utils.get(f'{user.id}')
        await bot.send_photo(mes.from_user.id, user.photos, f'–°—Ç–∞—Ç—É—Å: {status}\n'
                                                            f'–ò–º—è: {user.name}\n'
                                                            f'–í–æ–∑—Ä–∞—Å—Ç: {user.age}\n'
                                                            f'–ü–æ–ª: {'–ú' if user.gender else '–ñ'}\n'
                                                            f'–õ–æ–∫–∞—Ü–∏—è: {user.location}\n'
                                                            f'–û —Å–µ–±–µ: {user.description}',
                             reply_markup=menu_keyboard())
